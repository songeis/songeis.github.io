(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{151:function(t,e,r){"use strict";r.r(e);var _=r(0),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_1-1-了解对象的属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-了解对象的属性"}},[t._v("#")]),t._v(" 1.1 了解对象的属性")]),t._v(" "),r("h2",{attrs:{id:"什么是属性类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是属性类型"}},[t._v("#")]),t._v(" 什么是属性类型")]),t._v(" "),r("p",[t._v("属性类型实际上就是用来描述对象属性的，换句话说就是属性的属性。")]),t._v(" "),r("p",[t._v("是一个内部值，是给 JavaScript 引擎用的。")]),t._v(" "),r("p",[t._v("表示方式："),r("font",{attrs:{color:"red"}},[t._v("[[属性类型]]")])],1),t._v(" "),r("h2",{attrs:{id:"属性的分类：数据属性-访问器属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性的分类：数据属性-访问器属性"}},[t._v("#")]),t._v(" 属性的分类：数据属性+访问器属性")]),t._v(" "),r("p",[t._v("在 ECMAScript 中有两种类型的属性：数据属性和访问器属性")]),t._v(" "),r("p",[t._v("如果你不知道一个属性到底是访问器属性还是数据属性，你可以通过：")]),t._v(" "),r("p",[r("font",{attrs:{color:"red"}},[t._v("Object.getOwnPropertyDescriptor(对象，属性)")]),t._v("查看")],1),t._v(" "),r("p",[t._v("每种属性都会有4 种特性：")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("​\t[["),r("strong",[t._v("Configurable")]),t._v("]]:")]),t._v(" "),r("p",[t._v("两个作用：")]),t._v(" "),r("ol",[r("li",[t._v("这个属性能不能通过 delete 删除")]),t._v(" "),r("li",[t._v("该属性是否能转换成访问器类型")])])]),t._v(" "),r("li",[r("p",[t._v("[["),r("strong",[t._v("Enumerable")]),t._v("]]：")]),t._v(" "),r("ul",[r("li",[t._v("这个属性是否能够遍历得到")])])]),t._v(" "),r("li",[r("p",[t._v("数据属性特有的：")]),t._v(" "),r("ul",[r("li",[t._v("[["),r("strong",[t._v("Value")]),t._v("]]:属性的数据，我们对对象属性的读写实际上都是在操作这个特性。默认值为："),r("font",{attrs:{color:"red"}},[t._v("undefined")])],1),t._v(" "),r("li",[t._v("[["),r("strong",[t._v("Writable")]),t._v("]]: 属性的数据能否修改")])])]),t._v(" "),r("li",[r("p",[t._v("访问器属性特有的：")]),t._v(" "),r("ul",[r("li",[t._v("[[Get]]:读取属性值的时候调用。默认值为："),r("font",{attrs:{color:"red"}},[t._v("undefined")])],1),t._v(" "),r("li",[t._v("[[Set]]:设置属性值的时候调用。默认值为："),r("font",{attrs:{color:"red"}},[t._v("undefined")])],1)]),t._v(" "),r("p",[r("font",{attrs:{color:"red"}},[t._v("访问器属性不能直接定义,必须使用 Object.defineProperty()来定义。")])],1),t._v(" "),r("p",[t._v("参数解释：修改哪个对象的，哪个属性的，哪些个特性")]),t._v(" "),r("p",[t._v("Object.defineProperty()这个方法，如果没有指定configurable、enumerable 和writable 这 3 个特性，那么在调用这个函数的处理过程中，这三个默认值都是 false。")])])]),t._v(" "),r("p",[t._v("除了标记 undefined 的这3个特性外，剩下的默认值都是 true。")]),t._v(" "),r("h2",{attrs:{id:"数据特性操作的注意事项"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据特性操作的注意事项"}},[t._v("#")]),t._v(" 数据特性操作的注意事项")]),t._v(" "),r("p",[t._v("一次性定义多个属性，可以使用Object.defineProperties()代替Object.defineProperty()")]),t._v(" "),r("p",[t._v("一旦把属性定义为不可配置的(即[[Configurable]]:false) 就不能再把它变回可配置了(即[[Configurable]]:true)")])])}),[],!1,null,null,null);e.default=v.exports}}]);